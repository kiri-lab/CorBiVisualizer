/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package corbivisualizer;

import java.io.*;
import java.nio.charset.Charset;

import javafx.application.Application;
import javafx.scene.*;
import javafx.stage.Stage;
import javafx.scene.shape.*;
import javafx.application.Platform;

public class App extends Application
{

    private static Rectangle rect = new Rectangle();

    @Override
    public void start(Stage stage)
    {
        Group root = new Group();
        // TODO この辺のプロパティ、どっかでまとめて定義しておいてくだちい
        Scene scene = new Scene(root, 800, 600);
        rect.setX(10);
        rect.setY(10);
        rect.setWidth(100);
        rect.setHeight(10);
        new Thread(() -> updateGraph()).start();
        root.getChildren().add(rect);
        stage.setScene(scene);
        stage.show();
    }

    public static void main(String[] args)
    {
        launch();
    }

    public static void updateHeight(double height)
    {
        // TODO rectを継承したクラスに実装しておいてくれい
        Platform.runLater(() ->
        {
            rect.setHeight(height);
        });
    }

    public static void updateGraph()
    {
        // HACK いいからプロトタイピングだ！！
        // TODO 雑な書き方なので、Javaがプロセスを離すとブロックorデットロックになるかも。

        // TODO この辺は別のクラスに切り分けしておいてくれい
        ProcessBuilder pb = new ProcessBuilder("../../dummyProcess/main");//　 FIXME　なんかこの辺、win macで違うっぽい
        pb.redirectErrorStream(true);

        try
        {
            Process process = pb.start();
            //System.out.println(process.pid()); //掴んだプロセスのID取得

            BufferedReader bReader = new BufferedReader(
                    new InputStreamReader(process.getInputStream(), Charset.defaultCharset()));
            String line;
            while ((line = bReader.readLine()) != null)
            {
                updateHeight(Integer.parseInt(line));
                System.out.println("catched: " + line);
            }
            process.destroy();
        }
        catch(IOException e)
        {
            e.printStackTrace();
        }
    }
}
